esphome:
  name: lum-iot34
  comment: switchplate test yaml

esp32:
  board: firebeetle32

time:
  - platform: homeassistant
    id: the_time

wifi: 
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
  
api: 


ota:
  password: !secret ota_password

logger:

color:
  - id: my_light_red
    red: 100%
  - id: my_black
    blue: 0%
    green: 0%  
    red: 0%
  - id: my_red
    red: 100%
  - id: color_blue 
    blue: 86%
  - id: my_white
    red: 100%
    blue: 100%
    green: 100%
  - id: my_blue
    red: 0%
    blue: 100%
    green: 0%    
  - id: my_green
    red: 0%
    blue: 0%
    green: 100%    


external_components:
  # use rtttl and dfplayer from ESPHome's dev branch in GitHub
  # equivalent shorthand for GitHub
  #- source: github://nielsnl68/SwitchPlate
  - source:
      type: local
      path: C:\development\projects\switchplate\components

spi:
  mosi_pin: 23
  miso_pin: 19
  clk_pin: 18

  
font:
  - file: "gfonts://Roboto"
    id: my_font
    size: 20
    

display:
  - id: my_display
    platform: ili9341
    model: TFT 2.4
    cs_pin: 5
    dc_pin: 16
    rotation: 90
    pages:
      - id: page2
        lambda: |-
          it.fill(my_black);
          for(uint8_t i = 0; i<255; i++) {
             it.horizontal_line(5,i,100, my_red.fade_to_white(i));
             it.horizontal_line(110,i,100, my_red.fade_to_black(i));
             it.horizontal_line(215,i,100, my_red.gradient(my_blue, i));
          }
      - id: page1
        lambda: |-
          it.fill(id(my_green));
          it.print(2, 2, id(my_font), id(my_white), TextAlign::TOP_LEFT, "Woonkamer lampen");
          //it.strftime(210, 2, id(my_font), "%d/%m %H:%M", id(the_time).now() );
          //it.rectangle(    50, 50 ,228, 150, id(my_green));

          it.set_clipping( 50, 50 ,228, 150);
          it.filled_rectangle(0, 0, 320, 240,  id(my_black));

          it.rectangle(3, 28, 99, 99, id(my_blue));
          it.rectangle(3,136, 99, 99, 8, id(my_red));

          it.filled_rectangle(110, 28, 99, 99, id(my_blue));
          it.filled_rectangle(110,136, 99, 99, 7,  id(my_red));

          //  it.circle(218+50,28+50,50, id(my_blue));
          //  it.filled_circle(218+50,136+50,50, id(my_red));

          it.triangle(       268,  28,  218, 128, 318, 128, id(my_blue));

          it.filled_triangle(268, 136,  218, 236, 318, 236, id(my_red));

switchplate:
  display: my_display # Req 
  id: abcname # Opt.
  default_font: my_font
  header:
    - type: label
      id: header_title
      text: SwitchPlate test
    - type: label
      id: header_time
      text: !lambda return "test";
  pages:
    - id: myMainPage # Opt.
      name: myName
      selectable: true # can be opened with next and previous page selectors
      objects:
        - type: button
          id: btnHello
          x: 10 # Opt. Horizontal position on the page
          y: 10 # Opt. Vertical position on the page
          width: 60 # Opt. Width of the object
          height: 20 # Opt. Height of the object
          toggle: false # True: creates a toggle-on/toggle-off button. False: creates a normal button
          state: false # 0 = untoggled, 1 = toggled
          text: "Hello " # The text of the label
          align: left # Text alignment: left, center, right
          mode: expand # The wrapping mode of long text labels
        - type: slider
          max_value: 100
          min_value: 00
          value: !lambda return 10;
    - id: otherPage
      objects:
        - type: label
          text:  !lambda return "Hello World";
        - type: spinner
          x: -10
          y: 20
          width: 60
          height: 60
          #circle_color: "#704020"
          #segment_color: red
